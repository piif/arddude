#$(info Makefile.common)

## verify that ARDUINO_IDE and TARGET_BOARD are defined
ifeq (${TARGET_BOARD},)
  $(error TARGET_BOARD is not defined)
endif

ifeq (${ARDUINO_IDE},)
  ifneq ($(wildcard ${MAKE_MAKE_DIR}/target/${TARGET_BOARD}/Makefile),)
    $(info *** ARDUINO_IDE not defined, will use value from target makefile ***)
  else
    ifeq ($(OS),Windows_NT)
      ARDUINO_IDE := $(wildcard ${ProgramFiles(x86)}/arduino)
    else
      ARDUINO_IDE := $(lastword $(sort $(wildcard /usr/share/arduino /usr/local/arduino-* /opt/arduino-*))))
    endif
    ifeq (${ARDUINO_IDE},)
      $(error ARDUINO_IDE is not defined)
    else
      $(warning *** ARDUINO_IDE not defined, using auto discovered value ${ARDUINO_IDE} ***)
    endif
  endif
endif

# default current dir to here
CALLER_DIR := $(call truepath,$(dir $(firstword ${MAKEFILE_LIST})))
#CALLER_DIR ?= $(call truepath,.)

export MKDIR ?= mkdir -p

MAKE_MAKE = ${MAKE_MAKE_DIR}/etc/mkmk.${BATCH_EXT} -I ${ARDUINO_IDE} ${MAKE_MAKE_FLAGS}
ARD_CONSOLE = ${MAKE_MAKE_DIR}/etc/console.${BATCH_EXT} -I ${ARDUINO_IDE} ${ARD_CONSOLE_FLAGS}

## deduce target dir
TARGET_DIR ?= ${CALLER_DIR}/target/${TARGET_BOARD}

## and core lib
#CORE_LIB_DIR := ${TARGET_DIR}
CORE_LIB_DIR := $(call truepath,${MAKE_MAKE_DIR}/target/${TARGET_BOARD})
#VPATH += ${CORE_LIB_DIR}
CORE_LIB_NAME := libCore.a
CORE_LIB := ${CORE_LIB_DIR}/${CORE_LIB_NAME}

${TARGET_DIR} :
	-${MKDIR} ${TARGET_DIR}

${MAKE_MAKE_DIR}/target/${TARGET_BOARD}:
	-${MKDIR} ${MAKE_MAKE_DIR}/target/${TARGET_BOARD}

## look for target specific Makefile, or generate it
TARGET_MAKEFILE := ${MAKE_MAKE_DIR}/target/${TARGET_BOARD}/Makefile
${TARGET_MAKEFILE} : | ${MAKE_MAKE_DIR}/target/${TARGET_BOARD}
	${MAKE_MAKE} --board ${TARGET_BOARD} --output ${TARGET_MAKEFILE}

-include ${TARGET_MAKEFILE}
